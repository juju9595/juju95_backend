[ 상속 ]
    1. (상위) 클래스로부터 (하위) 클래스에게 (멤버변수/메소드)를 물려주는 행위
    2. 특징
        1. 하위클래스가 객체(인스턴스)생성하면 상위 클래스 객체(인스턴스)도 같이 생성된다.
            ex] 부모없이 자식 못태어난다
        2. **다형성**
                1) 하위 클래스/타입에서 상위 클래스/타입으로 변환가능(자동타입변환) *
                2) 상위 클래스/타입에서 하위 클래스/타입으로 변환가능(강제타입변환) *
        3. extends
            - class 상위클래스{ }
            - class 하위클래스 extends 상위클래스{ }

[ 인터페이스 ]
    1. 인터페이스로부터 클래스가 (추상메소드)를 물려받아 *구현* 하는 행위
    2. 특징
        1. 인터페이스는 *상수 와 *추상메소드 를 갖는다. (멤버변수가 없음) 즉] 생성자 없어서 자체적으로 객체(인스턴스) 생성 불가능
        2. **다형성**
            1) 인터페이스를 구현한 클래스/타입에서 인터페이스 타입으로 변환 가능(자동타입변환)
    3. implements
        - interface 인터페이스{ }
        - class 구현클래스 implements 인터페이스1, 인터페이스2{ }

[ 다형성 ]
    1. 다양한 형태/타입 갖는 성질, 값/객체를 변경하는게 아니다.
    2. 상속과 인터페이스 표현
    3. @오버라이딩 : 상속 또는 인터페이스에서 물려받은 메소드를 재구현(상속) 또는 구현(인터페이스) 하는 행위
        ** 타입간의 중복된 메소드가 존재할 경우 오버라이딩된 메소드가 최우선으로 실행된다.
    4. 확인
        객체 instanceof 타입
[ 인스턴스 ]
    1. 인스턴스(객체)는 클래스(설계도) 기반으로 메모리(컴퓨터저장소) 생성한다.
    2. 인스턴스(객체) 마다 의 멤버변수를 메모리에 각각 생성한다.
    3. 클래스의 메소드는 모든 인스턴스(객체) 공유 한다.
    --------------------------------------------------------------------------
    클래스/정적(메모리)                     힙(메모리)
    class Member{
        int age;                    new Member : int age = 10;
        void event(){

        }                           new Meber : int age = 30;

    }



